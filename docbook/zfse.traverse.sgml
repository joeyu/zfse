<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE article SYSTEM "/home/joeyu01/workspace/MyZFSEDocbook01/docbook-5.0/dtd/docbook.dtd">
<article xmlns='http://docbook.org/ns/docbook'>
<refentry xml:id="zfse.traverse">
<info>
<productname class="copyright">
zfse
<author>
<personname>
<firstname>Zhou</firstname>
<surname>Yu</surname>
</personname>
<email>nap.zhou.yu@gmail.com</email>
</author>
</productname>
</info>
<refmeta>
<refentrytitle>zfse.traverse</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo class="manual"></refmiscinfo>
</refmeta>
<refnamediv>
<refname><methodname>zfse.traverse</methodname></refname>
<refpurpose>
traverses through the specified directory, and applies the specified callback function to every file node.
</refpurpose>
</refnamediv>
<refsynopsisdiv>
<methodsynopsis>
<methodname>traverse</methodname>
<methodparam>dir</methodparam>
<methodparam>[options]</methodparam>
<methodparam>callback</methodparam>
<methodparam>[callback_args]</methodparam>
<methodparam>...</methodparam>
</methodsynopsis>
</refsynopsisdiv>
<refsect1>
<title>Description</title>
<para>
<methodname>traverse</methodname>() is a synchronous function, though it has callback function. 
After traverse() returns, no callback will be called anymore. 
In other words, the callback is only called during traverse() going through the directory tree and iterating each file node.</para>
<refsect2>
<title>Parameters</title>
<variablelist>
<varlistentry>
<term>
dir
</term>
<listitem>
The directory to traverse
</listitem>
</varlistentry>
<varlistentry>
<term> [options]</term>
<listitem>
The options object.
<varlistentry>
<term>[options.depthfirst=true]</term>
<listitem>
If options.depthfirst is true, it is a depth-first traversal (see
http://en.wikipedia.org/wiki/Depth-first_search). Otherwise, it is a breadth-first
traversal (see http://en.wikipedia.org/wiki/Breadth-first_search).
</listitem>
</varlistentry>
<varlistentry>
<term>[options.callbackdelay=true]</term>
<listitem>
If options.callbackdelay is true, and the current file node is a directory,
traverse() invokes callback upon that file node before it goes deeply into it.
</listitem>
</varlistentry>
</listitem>
</varlistentry>
<varlistentry>
<term> callback</term>
<listitem>
The callback function to invoke for every iterated file.

callback(file, base, [callback_args], ...)
<varlistentry>
<term>file</term>
<listitem>the iterated file node.</listitem>
</varlistentry>
<varlistentry>
<term>base</term>
<listitem>the base directory, which equals to the dir argument to traverse().</listitem>
</varlistentry>
<varlistentry>
<term>[callback_args]</term>
<listitem>equals to the [callback_args] arguments to traverse().</listitem>
</varlistentry>
</listitem>
</varlistentry>
<varlistentry>
<term>[callback_args]</term>
<listitem>
The optional arguments, which will be passed to callback.
</listitem>
</varlistentry>
</variablelist>
</refsect2>
</refsect1>
<refsect1>
<title>Examples</title>
<example>
<para>The following code snippet traverses through your current
directory and prints every file node.
</para>
<programlisting>
var zfse = require('zfse'); 
zfse.traverse('./', {'depthfirst': true, 'callbackdelay': false}, function(f) {
    console.log(f);
});
</programlisting>
</example>
</refsect1>
</refentry>

</article>
